<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.anu.spice</groupId>
	<artifactId>spice</artifactId>
	<version>1.0</version>
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/data</directory>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/java</directory>
				<includes>
					<include>**/*.java</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}</directory>
				<includes>
					<include>README.md</include>
					<include>COPYING</include>
					<include>example_input.json</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/data</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<!-- Run tests -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<skipTests>true</skipTests>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<plugin>
				<!-- Compile dependencies -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<!-- Generate dependencies in a separate directory -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Build an executable JAR -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>edu.anu.spice.SpiceScorer</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- Install local jars (meteor-1.5.jar and scenegraph-1.0.jar) -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<executions>
					<execution>
						<id>install-meteor</id>
						<phase>clean</phase>
						<configuration>
							<file>${basedir}/lib/meteor-1.5.jar</file>
							<repositoryLayout>default</repositoryLayout>
							<groupId>edu.cmu.meteor</groupId>
							<artifactId>Meteor</artifactId>
							<version>1.5</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
						<goals>
							<goal>install-file</goal>
						</goals>
					</execution>
					<execution>
						<id>install-scenegraph</id>
						<phase>clean</phase>
						<configuration>
							<file>${basedir}/lib/scenegraph-1.0.jar</file>
							<repositoryLayout>default</repositoryLayout>
							<groupId>edu.stanford.nlp</groupId>
							<artifactId>SceneGraphParser</artifactId>
							<version>1.0</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
						<goals>
							<goal>install-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
			<version>3.6.0</version>
			<exclusions>
				<exclusion>
					<groupId>com.io7m.xom</groupId>
					<artifactId>xom</artifactId>
				</exclusion>
				<exclusion>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</exclusion>
				<exclusion>
					<groupId>de.jollyday</groupId>
					<artifactId>jollyday</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.json</groupId>
					<artifactId>javax.json-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>stanford-corenlp</artifactId>
			<version>3.6.0</version>
			<classifier>models</classifier>
			<exclusions>
				<exclusion>
					<groupId>com.io7m.xom</groupId>
					<artifactId>xom</artifactId>
				</exclusion>
				<exclusion>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</exclusion>
				<exclusion>
					<groupId>de.jollyday</groupId>
					<artifactId>jollyday</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.json</groupId>
					<artifactId>javax.json-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
			<groupId>org.deephacks.lmdbjni</groupId>
			<artifactId>lmdbjni</artifactId>
			<version>0.4.6</version>
		</dependency>
		<dependency>
			<groupId>org.deephacks.lmdbjni</groupId>
			<artifactId>lmdbjni-linux64</artifactId>
			<version>0.4.6</version>
		</dependency>
		<dependency>
			<groupId>org.deephacks.lmdbjni</groupId>
			<artifactId>lmdbjni-osx64</artifactId>
			<version>0.4.6</version>
		</dependency>
		<dependency>
			<groupId>org.deephacks.lmdbjni</groupId>
			<artifactId>lmdbjni-win64</artifactId>
			<version>0.4.6</version>
		</dependency>
		<dependency>
			<groupId>de.ruedigermoeller</groupId>
			<artifactId>fst</artifactId>
			<version>2.47</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>edu.cmu.meteor</groupId>
			<artifactId>Meteor</artifactId>
			<version>1.5</version>
		</dependency>
		<dependency>
			<groupId>edu.stanford.nlp</groupId>
			<artifactId>SceneGraphParser</artifactId>
			<version>1.0</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>oracleReleases</id>
			<name>Oracle Released Java Packages</name>
			<url>http://download.oracle.com/maven</url>
			<layout>default</layout>
		</repository>
	</repositories>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
</project>
